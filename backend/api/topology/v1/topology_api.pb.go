// Code generated by protoc-gen-go. DO NOT EDIT.
// source: topology/v1/topology_api.proto

package topologyv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	_ "github.com/lyft/clutch/backend/api/api/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	status "google.golang.org/genproto/googleapis/rpc/status"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status1 "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Constraint_Operator int32

const (
	Constraint_UNSPECIFIED Constraint_Operator = 0
	// number operators
	Constraint_EQUAL                 Constraint_Operator = 1
	Constraint_NOT_EQUAL             Constraint_Operator = 2
	Constraint_GREATER_THAN          Constraint_Operator = 3
	Constraint_GREATER_THAN_OR_EQUAL Constraint_Operator = 4
	Constraint_LESS_THAN             Constraint_Operator = 5
	Constraint_LESS_THAN_OR_EQUAL    Constraint_Operator = 6
	// string operators
	Constraint_CONTAINS_STRING Constraint_Operator = 7
	// array operators
	Constraint_CONTAINS_VALUE Constraint_Operator = 8
	// map operators
	Constraint_CONTAINS_KEY Constraint_Operator = 9
)

var Constraint_Operator_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "EQUAL",
	2: "NOT_EQUAL",
	3: "GREATER_THAN",
	4: "GREATER_THAN_OR_EQUAL",
	5: "LESS_THAN",
	6: "LESS_THAN_OR_EQUAL",
	7: "CONTAINS_STRING",
	8: "CONTAINS_VALUE",
	9: "CONTAINS_KEY",
}

var Constraint_Operator_value = map[string]int32{
	"UNSPECIFIED":           0,
	"EQUAL":                 1,
	"NOT_EQUAL":             2,
	"GREATER_THAN":          3,
	"GREATER_THAN_OR_EQUAL": 4,
	"LESS_THAN":             5,
	"LESS_THAN_OR_EQUAL":    6,
	"CONTAINS_STRING":       7,
	"CONTAINS_VALUE":        8,
	"CONTAINS_KEY":          9,
}

func (x Constraint_Operator) String() string {
	return proto.EnumName(Constraint_Operator_name, int32(x))
}

func (Constraint_Operator) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c000408c21f9296a, []int{3, 0}
}

// if aggregate, then all timeseries or array metadata is aggregated into a
// value and returned otherwise, it will return the original array/timeseries.
// This is meant to reduce message size for larger queries.
type MetadataQuery_Aggregation int32

const (
	// default; no aggregation applied
	MetadataQuery_UNSPECIFIED MetadataQuery_Aggregation = 0
	MetadataQuery_SUM         MetadataQuery_Aggregation = 1
	MetadataQuery_AVERAGE     MetadataQuery_Aggregation = 2
	MetadataQuery_MEDIAN      MetadataQuery_Aggregation = 3
	MetadataQuery_MODE        MetadataQuery_Aggregation = 4
	MetadataQuery_MIN         MetadataQuery_Aggregation = 5
	MetadataQuery_MAX         MetadataQuery_Aggregation = 6
	MetadataQuery_COUNT       MetadataQuery_Aggregation = 7
)

var MetadataQuery_Aggregation_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "SUM",
	2: "AVERAGE",
	3: "MEDIAN",
	4: "MODE",
	5: "MIN",
	6: "MAX",
	7: "COUNT",
}

var MetadataQuery_Aggregation_value = map[string]int32{
	"UNSPECIFIED": 0,
	"SUM":         1,
	"AVERAGE":     2,
	"MEDIAN":      3,
	"MODE":        4,
	"MIN":         5,
	"MAX":         6,
	"COUNT":       7,
}

func (x MetadataQuery_Aggregation) String() string {
	return proto.EnumName(MetadataQuery_Aggregation_name, int32(x))
}

func (MetadataQuery_Aggregation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c000408c21f9296a, []int{4, 0}
}

type GetTopologyRequest struct {
	Queries              []*Query `protobuf:"bytes,1,rep,name=queries,proto3" json:"queries,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTopologyRequest) Reset()         { *m = GetTopologyRequest{} }
func (m *GetTopologyRequest) String() string { return proto.CompactTextString(m) }
func (*GetTopologyRequest) ProtoMessage()    {}
func (*GetTopologyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_c000408c21f9296a, []int{0}
}

func (m *GetTopologyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopologyRequest.Unmarshal(m, b)
}
func (m *GetTopologyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopologyRequest.Marshal(b, m, deterministic)
}
func (m *GetTopologyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopologyRequest.Merge(m, src)
}
func (m *GetTopologyRequest) XXX_Size() int {
	return xxx_messageInfo_GetTopologyRequest.Size(m)
}
func (m *GetTopologyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopologyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopologyRequest proto.InternalMessageInfo

func (m *GetTopologyRequest) GetQueries() []*Query {
	if m != nil {
		return m.Queries
	}
	return nil
}

type GetTopologyResponse struct {
	Results              []*QueryResult `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *GetTopologyResponse) Reset()         { *m = GetTopologyResponse{} }
func (m *GetTopologyResponse) String() string { return proto.CompactTextString(m) }
func (*GetTopologyResponse) ProtoMessage()    {}
func (*GetTopologyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c000408c21f9296a, []int{1}
}

func (m *GetTopologyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetTopologyResponse.Unmarshal(m, b)
}
func (m *GetTopologyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetTopologyResponse.Marshal(b, m, deterministic)
}
func (m *GetTopologyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTopologyResponse.Merge(m, src)
}
func (m *GetTopologyResponse) XXX_Size() int {
	return xxx_messageInfo_GetTopologyResponse.Size(m)
}
func (m *GetTopologyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTopologyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetTopologyResponse proto.InternalMessageInfo

func (m *GetTopologyResponse) GetResults() []*QueryResult {
	if m != nil {
		return m.Results
	}
	return nil
}

// A query allows the user to specify multiple dimensions and the
// corresponding desired values for the identifying features of the returned
// nodes.
type FeatureQuery struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Values               []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FeatureQuery) Reset()         { *m = FeatureQuery{} }
func (m *FeatureQuery) String() string { return proto.CompactTextString(m) }
func (*FeatureQuery) ProtoMessage()    {}
func (*FeatureQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_c000408c21f9296a, []int{2}
}

func (m *FeatureQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FeatureQuery.Unmarshal(m, b)
}
func (m *FeatureQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FeatureQuery.Marshal(b, m, deterministic)
}
func (m *FeatureQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FeatureQuery.Merge(m, src)
}
func (m *FeatureQuery) XXX_Size() int {
	return xxx_messageInfo_FeatureQuery.Size(m)
}
func (m *FeatureQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_FeatureQuery.DiscardUnknown(m)
}

var xxx_messageInfo_FeatureQuery proto.InternalMessageInfo

func (m *FeatureQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *FeatureQuery) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// A metadata constraint with an operator and a value
type Constraint struct {
	Operator             Constraint_Operator `protobuf:"varint,1,opt,name=operator,proto3,enum=clutch.topology.v1.Constraint_Operator" json:"operator,omitempty"`
	Value                *_struct.Value      `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Constraint) Reset()         { *m = Constraint{} }
func (m *Constraint) String() string { return proto.CompactTextString(m) }
func (*Constraint) ProtoMessage()    {}
func (*Constraint) Descriptor() ([]byte, []int) {
	return fileDescriptor_c000408c21f9296a, []int{3}
}

func (m *Constraint) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Constraint.Unmarshal(m, b)
}
func (m *Constraint) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Constraint.Marshal(b, m, deterministic)
}
func (m *Constraint) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Constraint.Merge(m, src)
}
func (m *Constraint) XXX_Size() int {
	return xxx_messageInfo_Constraint.Size(m)
}
func (m *Constraint) XXX_DiscardUnknown() {
	xxx_messageInfo_Constraint.DiscardUnknown(m)
}

var xxx_messageInfo_Constraint proto.InternalMessageInfo

func (m *Constraint) GetOperator() Constraint_Operator {
	if m != nil {
		return m.Operator
	}
	return Constraint_UNSPECIFIED
}

func (m *Constraint) GetValue() *_struct.Value {
	if m != nil {
		return m.Value
	}
	return nil
}

// Similar to FeatureQuery, rather than pre-traversal filtering,
// MetadataQuery specifies metadata params and potential filters
// for nodes and edges
type MetadataQuery struct {
	// name of the metadata field to populate. i.e. call_volume, service_tier,
	// etc.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// i.e. Wavefront params: google.protobuf.Struct{ ...start: <Time>, end:
	// <Time>, Timeout: <Duration>} i.e. other params for other clients TBD
	Params      *_struct.Struct           `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
	Aggregation MetadataQuery_Aggregation `protobuf:"varint,3,opt,name=aggregation,proto3,enum=clutch.topology.v1.MetadataQuery_Aggregation" json:"aggregation,omitempty"`
	// a series of restrictive constraints for the value/values of a Type to pass
	Constraints          []*Constraint `protobuf:"bytes,5,rep,name=constraints,proto3" json:"constraints,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *MetadataQuery) Reset()         { *m = MetadataQuery{} }
func (m *MetadataQuery) String() string { return proto.CompactTextString(m) }
func (*MetadataQuery) ProtoMessage()    {}
func (*MetadataQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_c000408c21f9296a, []int{4}
}

func (m *MetadataQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MetadataQuery.Unmarshal(m, b)
}
func (m *MetadataQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MetadataQuery.Marshal(b, m, deterministic)
}
func (m *MetadataQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MetadataQuery.Merge(m, src)
}
func (m *MetadataQuery) XXX_Size() int {
	return xxx_messageInfo_MetadataQuery.Size(m)
}
func (m *MetadataQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_MetadataQuery.DiscardUnknown(m)
}

var xxx_messageInfo_MetadataQuery proto.InternalMessageInfo

func (m *MetadataQuery) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *MetadataQuery) GetParams() *_struct.Struct {
	if m != nil {
		return m.Params
	}
	return nil
}

func (m *MetadataQuery) GetAggregation() MetadataQuery_Aggregation {
	if m != nil {
		return m.Aggregation
	}
	return MetadataQuery_UNSPECIFIED
}

func (m *MetadataQuery) GetConstraints() []*Constraint {
	if m != nil {
		return m.Constraints
	}
	return nil
}

type Query struct {
	// Features represent the identifying characteristics of a node that make it
	// unique, i.e. the resulting dimensions of the nodes in the result set.
	//
	// A query can specify the set of desired values or wildcard values for each
	// feature.
	Features []*FeatureQuery `protobuf:"bytes,1,rep,name=features,proto3" json:"features,omitempty"`
	// Metadata is non-identifying characteristics of a node which can be
	// filtered upon and changed.
	NodeMetadata []*MetadataQuery `protobuf:"bytes,4,rep,name=node_metadata,json=nodeMetadata,proto3" json:"node_metadata,omitempty"`
	// Metadata query for edges.
	EdgeMetadata []*MetadataQuery `protobuf:"bytes,5,rep,name=edge_metadata,json=edgeMetadata,proto3" json:"edge_metadata,omitempty"`
	// Maximum depth to traverse in the graph upwards.
	SourceDepth uint32 `protobuf:"varint,2,opt,name=source_depth,json=sourceDepth,proto3" json:"source_depth,omitempty"`
	// Maximum depth to traverse in the graph downwards.
	TargetDepth          uint32   `protobuf:"varint,3,opt,name=target_depth,json=targetDepth,proto3" json:"target_depth,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_c000408c21f9296a, []int{5}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetFeatures() []*FeatureQuery {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *Query) GetNodeMetadata() []*MetadataQuery {
	if m != nil {
		return m.NodeMetadata
	}
	return nil
}

func (m *Query) GetEdgeMetadata() []*MetadataQuery {
	if m != nil {
		return m.EdgeMetadata
	}
	return nil
}

func (m *Query) GetSourceDepth() uint32 {
	if m != nil {
		return m.SourceDepth
	}
	return 0
}

func (m *Query) GetTargetDepth() uint32 {
	if m != nil {
		return m.TargetDepth
	}
	return 0
}

type QueryResult struct {
	// Errors thats pertain to the issued query.
	Status *status.Status `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Query issued in the request to yield the result.
	Query *Query `protobuf:"bytes,2,opt,name=query,proto3" json:"query,omitempty"`
	// Subset of the IDs for the query-matched nodes before any traversal
	// occurred.
	MatchedNodeIds []string `protobuf:"bytes,3,rep,name=matched_node_ids,json=matchedNodeIds,proto3" json:"matched_node_ids,omitempty"`
	// Map of node IDs to the node object.
	Nodes map[string]*Node `protobuf:"bytes,4,rep,name=nodes,proto3" json:"nodes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Map of edge IDs to the edge object.
	Edges                map[string]*Edge `protobuf:"bytes,5,rep,name=edges,proto3" json:"edges,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *QueryResult) Reset()         { *m = QueryResult{} }
func (m *QueryResult) String() string { return proto.CompactTextString(m) }
func (*QueryResult) ProtoMessage()    {}
func (*QueryResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_c000408c21f9296a, []int{6}
}

func (m *QueryResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryResult.Unmarshal(m, b)
}
func (m *QueryResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryResult.Marshal(b, m, deterministic)
}
func (m *QueryResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryResult.Merge(m, src)
}
func (m *QueryResult) XXX_Size() int {
	return xxx_messageInfo_QueryResult.Size(m)
}
func (m *QueryResult) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryResult.DiscardUnknown(m)
}

var xxx_messageInfo_QueryResult proto.InternalMessageInfo

func (m *QueryResult) GetStatus() *status.Status {
	if m != nil {
		return m.Status
	}
	return nil
}

func (m *QueryResult) GetQuery() *Query {
	if m != nil {
		return m.Query
	}
	return nil
}

func (m *QueryResult) GetMatchedNodeIds() []string {
	if m != nil {
		return m.MatchedNodeIds
	}
	return nil
}

func (m *QueryResult) GetNodes() map[string]*Node {
	if m != nil {
		return m.Nodes
	}
	return nil
}

func (m *QueryResult) GetEdges() map[string]*Edge {
	if m != nil {
		return m.Edges
	}
	return nil
}

type Node struct {
	// Each node has an opaque ID that is used to identify the node during result
	// processing and presentation.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Features represent the identifying characteristics (i.e. dimensions) of a
	// node that make it unique.
	//
	// When a node is returned from a query, the set of feature fields included on
	// the node will match those in the query.
	Features map[string]string `protobuf:"bytes,2,rep,name=features,proto3" json:"features,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Metadata maps field names to assorted state or characteristics of the node.
	Metadata             map[string]*_struct.Value `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Node) Reset()         { *m = Node{} }
func (m *Node) String() string { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()    {}
func (*Node) Descriptor() ([]byte, []int) {
	return fileDescriptor_c000408c21f9296a, []int{7}
}

func (m *Node) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Node.Unmarshal(m, b)
}
func (m *Node) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Node.Marshal(b, m, deterministic)
}
func (m *Node) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Node.Merge(m, src)
}
func (m *Node) XXX_Size() int {
	return xxx_messageInfo_Node.Size(m)
}
func (m *Node) XXX_DiscardUnknown() {
	xxx_messageInfo_Node.DiscardUnknown(m)
}

var xxx_messageInfo_Node proto.InternalMessageInfo

func (m *Node) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Node) GetFeatures() map[string]string {
	if m != nil {
		return m.Features
	}
	return nil
}

func (m *Node) GetMetadata() map[string]*_struct.Value {
	if m != nil {
		return m.Metadata
	}
	return nil
}

type Edge struct {
	// Each edge has an opaque ID that is used to identify the edge during result
	// processing and presentation.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Node ID where the edge originates.
	SourceNodeId string `protobuf:"bytes,2,opt,name=source_node_id,json=sourceNodeId,proto3" json:"source_node_id,omitempty"`
	// Node ID where the edge terminates.
	TargetNodeId string `protobuf:"bytes,3,opt,name=target_node_id,json=targetNodeId,proto3" json:"target_node_id,omitempty"`
	// Metadata maps field names to assorted state or characteristics of the
	// edge.
	Metadata             map[string]*_struct.Value `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *Edge) Reset()         { *m = Edge{} }
func (m *Edge) String() string { return proto.CompactTextString(m) }
func (*Edge) ProtoMessage()    {}
func (*Edge) Descriptor() ([]byte, []int) {
	return fileDescriptor_c000408c21f9296a, []int{8}
}

func (m *Edge) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Edge.Unmarshal(m, b)
}
func (m *Edge) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Edge.Marshal(b, m, deterministic)
}
func (m *Edge) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Edge.Merge(m, src)
}
func (m *Edge) XXX_Size() int {
	return xxx_messageInfo_Edge.Size(m)
}
func (m *Edge) XXX_DiscardUnknown() {
	xxx_messageInfo_Edge.DiscardUnknown(m)
}

var xxx_messageInfo_Edge proto.InternalMessageInfo

func (m *Edge) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Edge) GetSourceNodeId() string {
	if m != nil {
		return m.SourceNodeId
	}
	return ""
}

func (m *Edge) GetTargetNodeId() string {
	if m != nil {
		return m.TargetNodeId
	}
	return ""
}

func (m *Edge) GetMetadata() map[string]*_struct.Value {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func init() {
	proto.RegisterEnum("clutch.topology.v1.Constraint_Operator", Constraint_Operator_name, Constraint_Operator_value)
	proto.RegisterEnum("clutch.topology.v1.MetadataQuery_Aggregation", MetadataQuery_Aggregation_name, MetadataQuery_Aggregation_value)
	proto.RegisterType((*GetTopologyRequest)(nil), "clutch.topology.v1.GetTopologyRequest")
	proto.RegisterType((*GetTopologyResponse)(nil), "clutch.topology.v1.GetTopologyResponse")
	proto.RegisterType((*FeatureQuery)(nil), "clutch.topology.v1.FeatureQuery")
	proto.RegisterType((*Constraint)(nil), "clutch.topology.v1.Constraint")
	proto.RegisterType((*MetadataQuery)(nil), "clutch.topology.v1.MetadataQuery")
	proto.RegisterType((*Query)(nil), "clutch.topology.v1.Query")
	proto.RegisterType((*QueryResult)(nil), "clutch.topology.v1.QueryResult")
	proto.RegisterMapType((map[string]*Edge)(nil), "clutch.topology.v1.QueryResult.EdgesEntry")
	proto.RegisterMapType((map[string]*Node)(nil), "clutch.topology.v1.QueryResult.NodesEntry")
	proto.RegisterType((*Node)(nil), "clutch.topology.v1.Node")
	proto.RegisterMapType((map[string]string)(nil), "clutch.topology.v1.Node.FeaturesEntry")
	proto.RegisterMapType((map[string]*_struct.Value)(nil), "clutch.topology.v1.Node.MetadataEntry")
	proto.RegisterType((*Edge)(nil), "clutch.topology.v1.Edge")
	proto.RegisterMapType((map[string]*_struct.Value)(nil), "clutch.topology.v1.Edge.MetadataEntry")
}

func init() {
	proto.RegisterFile("topology/v1/topology_api.proto", fileDescriptor_c000408c21f9296a)
}

var fileDescriptor_c000408c21f9296a = []byte{
	// 1005 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0xc7, 0x76, 0xfe, 0x3e, 0x27, 0x59, 0x6b, 0x16, 0xba, 0xde, 0x6a, 0x59, 0xb2, 0x16, 0x62,
	0x43, 0x05, 0x8e, 0x9a, 0xbd, 0x40, 0xe1, 0xb0, 0x6e, 0xea, 0x96, 0x88, 0x26, 0xe9, 0x4e, 0x92,
	0x0a, 0xb8, 0x44, 0xde, 0x78, 0xd6, 0x8d, 0x48, 0x63, 0xaf, 0x3d, 0x8e, 0xd4, 0x2b, 0x37, 0xce,
	0x9c, 0x10, 0xdf, 0x80, 0x13, 0x1f, 0x81, 0x03, 0xe2, 0x8c, 0xc4, 0x27, 0x40, 0xe2, 0x5b, 0x70,
	0x41, 0x33, 0x1e, 0x27, 0xae, 0x92, 0x34, 0x80, 0xc4, 0xcd, 0x7e, 0xf3, 0x7b, 0xbf, 0x79, 0xfe,
	0xbd, 0xdf, 0x3c, 0x0f, 0x3c, 0xa6, 0x7e, 0xe0, 0xcf, 0x7c, 0xef, 0xa6, 0xb9, 0x38, 0x6c, 0xa6,
	0xcf, 0x63, 0x27, 0x98, 0x9a, 0x41, 0xe8, 0x53, 0x1f, 0xa1, 0xc9, 0x2c, 0xa6, 0x93, 0x2b, 0x33,
	0x5d, 0x32, 0x17, 0x87, 0xfb, 0x8f, 0x3c, 0xdf, 0xf7, 0x66, 0xa4, 0xe9, 0x04, 0xd3, 0xa6, 0x33,
	0x9f, 0xfb, 0xd4, 0xa1, 0x53, 0x7f, 0x1e, 0x25, 0x19, 0xcb, 0x55, 0xfe, 0xf6, 0x32, 0x7e, 0xd5,
	0x8c, 0x68, 0x18, 0x4f, 0xa8, 0x58, 0x7d, 0x20, 0x56, 0xc3, 0x60, 0xd2, 0x8c, 0xa8, 0x43, 0xe3,
	0x34, 0x4d, 0x67, 0x6c, 0x8b, 0xc3, 0x75, 0x42, 0xa3, 0x03, 0xe8, 0x8c, 0xd0, 0xa1, 0x28, 0x00,
	0x93, 0xd7, 0x31, 0x89, 0x28, 0x7a, 0x06, 0xc5, 0xd7, 0x31, 0x09, 0xa7, 0x24, 0xd2, 0xa5, 0xba,
	0xd2, 0x50, 0x5b, 0x0f, 0xcd, 0xf5, 0x52, 0xcd, 0x17, 0x31, 0x09, 0x6f, 0x70, 0x8a, 0x34, 0x2e,
	0xe0, 0xfe, 0x2d, 0xaa, 0x28, 0xf0, 0xe7, 0x11, 0x41, 0x1f, 0x43, 0x31, 0x24, 0x51, 0x3c, 0xa3,
	0x29, 0xd7, 0x3b, 0xdb, 0xb9, 0x38, 0x0e, 0xa7, 0x78, 0xe3, 0x08, 0x2a, 0xa7, 0xc4, 0xa1, 0x71,
	0x48, 0xf8, 0x32, 0x42, 0x90, 0x9b, 0x3b, 0xd7, 0x44, 0x97, 0xea, 0x52, 0xa3, 0x8c, 0xf9, 0x33,
	0xda, 0x83, 0xc2, 0xc2, 0x99, 0xc5, 0x24, 0xd2, 0xe5, 0xba, 0xd2, 0x28, 0x63, 0xf1, 0x66, 0xfc,
	0x2a, 0x03, 0xb4, 0xfd, 0x79, 0x44, 0x43, 0x67, 0x3a, 0xa7, 0xa8, 0x0d, 0x25, 0x3f, 0x20, 0xa1,
	0x43, 0xfd, 0x90, 0xa7, 0xd7, 0x5a, 0x4f, 0x37, 0x95, 0xb1, 0xca, 0x30, 0xfb, 0x02, 0x8e, 0x97,
	0x89, 0xe8, 0x03, 0xc8, 0x73, 0x76, 0x5d, 0xae, 0x4b, 0x0d, 0xb5, 0xb5, 0x67, 0x26, 0x7a, 0x9b,
	0x69, 0x37, 0xcc, 0x4b, 0xb6, 0x8a, 0x13, 0x90, 0xf1, 0x8b, 0x04, 0xa5, 0x94, 0x04, 0xdd, 0x03,
	0x75, 0xd4, 0x1b, 0x5c, 0xd8, 0xed, 0xce, 0x69, 0xc7, 0x3e, 0xd1, 0xde, 0x40, 0x65, 0xc8, 0xdb,
	0x2f, 0x46, 0xd6, 0xb9, 0x26, 0xa1, 0x2a, 0x94, 0x7b, 0xfd, 0xe1, 0x38, 0x79, 0x95, 0x91, 0x06,
	0x95, 0x33, 0x6c, 0x5b, 0x43, 0x1b, 0x8f, 0x87, 0x9f, 0x59, 0x3d, 0x4d, 0x41, 0x0f, 0xe1, 0xad,
	0x6c, 0x64, 0xdc, 0xc7, 0x02, 0x9c, 0x63, 0xb9, 0xe7, 0xf6, 0x60, 0x90, 0x20, 0xf3, 0x68, 0x0f,
	0xd0, 0xf2, 0x75, 0x05, 0x2b, 0xa0, 0xfb, 0x70, 0xaf, 0xdd, 0xef, 0x0d, 0xad, 0x4e, 0x6f, 0x30,
	0x1e, 0x0c, 0x71, 0xa7, 0x77, 0xa6, 0x15, 0x11, 0x82, 0xda, 0x32, 0x78, 0x69, 0x9d, 0x8f, 0x6c,
	0xad, 0xc4, 0x36, 0x5f, 0xc6, 0x3e, 0xb7, 0xbf, 0xd4, 0xca, 0xc6, 0x6f, 0x32, 0x54, 0xbb, 0x84,
	0x3a, 0xae, 0x43, 0x9d, 0xed, 0x6d, 0x68, 0x42, 0x21, 0x70, 0x42, 0xe7, 0x3a, 0x12, 0xda, 0x3c,
	0x58, 0xd3, 0x66, 0xc0, 0x9d, 0x8a, 0x05, 0x0c, 0xf5, 0x41, 0x75, 0x3c, 0x2f, 0x24, 0x1e, 0xb7,
	0xa3, 0xae, 0xf0, 0x9e, 0x7c, 0xb8, 0xa9, 0x27, 0xb7, 0x36, 0x37, 0xad, 0x55, 0x12, 0xce, 0x32,
	0xa0, 0xe7, 0xa0, 0x4e, 0x96, 0xdd, 0x8b, 0xf4, 0x3c, 0xf7, 0xda, 0xe3, 0xbb, 0x9b, 0x8c, 0xb3,
	0x29, 0x86, 0x07, 0x6a, 0x86, 0x7d, 0xbd, 0x65, 0x45, 0x50, 0x06, 0xa3, 0xae, 0x26, 0x21, 0x15,
	0x8a, 0xd6, 0xa5, 0x8d, 0xad, 0x33, 0x5b, 0x93, 0x11, 0x40, 0xa1, 0x6b, 0x9f, 0x74, 0x78, 0xa3,
	0x4a, 0x90, 0xeb, 0xf6, 0x4f, 0x6c, 0x2d, 0xc7, 0xb0, 0xdd, 0x0e, 0xeb, 0x08, 0x7b, 0xb0, 0xbe,
	0xd0, 0x0a, 0xac, 0xe1, 0xed, 0xfe, 0xa8, 0x37, 0xd4, 0x8a, 0xc6, 0x0f, 0x32, 0xe4, 0x13, 0x29,
	0x3f, 0x85, 0xd2, 0xab, 0xc4, 0xe1, 0xe9, 0xe9, 0xa8, 0x6f, 0xaa, 0x38, 0x7b, 0x0a, 0xf0, 0x32,
	0x03, 0x9d, 0x42, 0x75, 0xee, 0xbb, 0x64, 0x7c, 0x2d, 0x14, 0xd2, 0x73, 0x9c, 0xe2, 0xc9, 0x4e,
	0x15, 0x71, 0x85, 0xe5, 0xa5, 0x21, 0xc6, 0x43, 0x5c, 0x2f, 0xc3, 0x93, 0xff, 0xc7, 0x3c, 0x2c,
	0x6f, 0xc9, 0xf3, 0x04, 0x2a, 0x91, 0x1f, 0x87, 0x13, 0x32, 0x76, 0x49, 0x40, 0xaf, 0xb8, 0x15,
	0xaa, 0x58, 0x4d, 0x62, 0x27, 0x2c, 0xc4, 0x20, 0xd4, 0x09, 0x3d, 0x42, 0x05, 0x44, 0x49, 0x20,
	0x49, 0x8c, 0x43, 0x8c, 0x9f, 0x15, 0x50, 0x33, 0xe3, 0x00, 0x1d, 0x40, 0x21, 0x19, 0x66, 0xdc,
	0x70, 0x6a, 0x0b, 0xa5, 0xd6, 0x0a, 0x83, 0x89, 0x39, 0xe0, 0x2b, 0x58, 0x20, 0x50, 0x13, 0xf2,
	0x6c, 0x1c, 0xdd, 0x08, 0x17, 0xde, 0x31, 0xb6, 0x12, 0x1c, 0x6a, 0x80, 0x76, 0xed, 0xd0, 0xc9,
	0x15, 0x71, 0xc7, 0x5c, 0xca, 0xa9, 0x1b, 0xe9, 0x0a, 0x1f, 0x24, 0x35, 0x11, 0xef, 0xf9, 0x2e,
	0xe9, 0xb8, 0x11, 0x7a, 0x0e, 0x79, 0x86, 0x88, 0x84, 0xc8, 0x07, 0x3b, 0xa6, 0x98, 0xc9, 0xf2,
	0x22, 0x7b, 0x4e, 0xd9, 0x5e, 0x3c, 0x91, 0x31, 0x30, 0xb9, 0x52, 0x6f, 0xee, 0x64, 0xb0, 0x19,
	0x58, 0x30, 0xf0, 0xc4, 0x7d, 0x0c, 0xb0, 0xa2, 0x45, 0x1a, 0x28, 0x5f, 0x93, 0x1b, 0x71, 0x0c,
	0xd9, 0x23, 0x32, 0x6f, 0x0f, 0x28, 0x7d, 0xd3, 0x0e, 0x8c, 0x40, 0x8c, 0xa8, 0x23, 0xf9, 0x23,
	0x89, 0x71, 0xae, 0x36, 0xfa, 0x8f, 0x9c, 0x8c, 0x20, 0xc3, 0x69, 0xfc, 0x24, 0x43, 0x8e, 0xed,
	0x83, 0x6a, 0x20, 0x4f, 0x5d, 0xc1, 0x26, 0x4f, 0x5d, 0x74, 0x9c, 0xf1, 0xbb, 0xcc, 0x55, 0x78,
	0x6f, 0x5b, 0x8d, 0xa9, 0xe9, 0x85, 0x02, 0x2b, 0xd7, 0x1f, 0x43, 0x69, 0x69, 0x54, 0x65, 0x07,
	0x47, 0x6a, 0x4d, 0xc1, 0x91, 0xe6, 0xed, 0x7f, 0x02, 0xd5, 0x5b, 0xf4, 0x1b, 0xbe, 0xfb, 0xcd,
	0xec, 0x77, 0x97, 0xb3, 0x8a, 0x0d, 0x56, 0x03, 0x71, 0x5b, 0xf2, 0xbf, 0xfa, 0x53, 0x70, 0xc9,
	0xfe, 0x92, 0x20, 0xc7, 0x64, 0x5c, 0x93, 0xec, 0x5d, 0xa8, 0x89, 0x43, 0x25, 0x0c, 0x2a, 0x0a,
	0x12, 0x47, 0x2d, 0xb1, 0x27, 0x43, 0x89, 0x73, 0x95, 0xa2, 0x94, 0x04, 0x95, 0x44, 0x05, 0x2a,
	0x2b, 0x5d, 0x6e, 0xbb, 0x74, 0xac, 0x8e, 0xad, 0xd2, 0xfd, 0x1f, 0x5f, 0xdf, 0xfa, 0x5e, 0x02,
	0x35, 0xbd, 0x39, 0x58, 0x17, 0x1d, 0xf4, 0xad, 0x04, 0x6a, 0xe6, 0x32, 0x81, 0x36, 0x96, 0xb9,
	0x7e, 0x71, 0xd9, 0x7f, 0xba, 0x13, 0x97, 0xdc, 0x4a, 0x8c, 0xf7, 0x7f, 0xfc, 0xe3, 0x91, 0x5c,
	0x92, 0xbf, 0xf9, 0xfd, 0xcf, 0xef, 0xe4, 0xb7, 0x0d, 0x3d, 0x7b, 0x41, 0x6b, 0x7a, 0x2b, 0xfc,
	0x91, 0x74, 0x70, 0x5c, 0xf9, 0x0a, 0xd2, 0xa5, 0xc5, 0xe1, 0xcb, 0x02, 0xff, 0x88, 0x67, 0x7f,
	0x07, 0x00, 0x00, 0xff, 0xff, 0xa6, 0xa6, 0xff, 0xb7, 0xdc, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// TopologyAPIClient is the client API for TopologyAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type TopologyAPIClient interface {
	GetTopology(ctx context.Context, in *GetTopologyRequest, opts ...grpc.CallOption) (*GetTopologyResponse, error)
}

type topologyAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewTopologyAPIClient(cc grpc.ClientConnInterface) TopologyAPIClient {
	return &topologyAPIClient{cc}
}

func (c *topologyAPIClient) GetTopology(ctx context.Context, in *GetTopologyRequest, opts ...grpc.CallOption) (*GetTopologyResponse, error) {
	out := new(GetTopologyResponse)
	err := c.cc.Invoke(ctx, "/clutch.topology.v1.TopologyAPI/GetTopology", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// TopologyAPIServer is the server API for TopologyAPI service.
type TopologyAPIServer interface {
	GetTopology(context.Context, *GetTopologyRequest) (*GetTopologyResponse, error)
}

// UnimplementedTopologyAPIServer can be embedded to have forward compatible implementations.
type UnimplementedTopologyAPIServer struct {
}

func (*UnimplementedTopologyAPIServer) GetTopology(ctx context.Context, req *GetTopologyRequest) (*GetTopologyResponse, error) {
	return nil, status1.Errorf(codes.Unimplemented, "method GetTopology not implemented")
}

func RegisterTopologyAPIServer(s *grpc.Server, srv TopologyAPIServer) {
	s.RegisterService(&_TopologyAPI_serviceDesc, srv)
}

func _TopologyAPI_GetTopology_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetTopologyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TopologyAPIServer).GetTopology(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clutch.topology.v1.TopologyAPI/GetTopology",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TopologyAPIServer).GetTopology(ctx, req.(*GetTopologyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TopologyAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clutch.topology.v1.TopologyAPI",
	HandlerType: (*TopologyAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetTopology",
			Handler:    _TopologyAPI_GetTopology_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "topology/v1/topology_api.proto",
}
