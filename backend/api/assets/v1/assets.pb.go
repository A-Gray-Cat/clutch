// Code generated by protoc-gen-go. DO NOT EDIT.
// source: assets/v1/assets.proto

package assetsv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/lyft/clutch/backend/api/api/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FetchRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchRequest) Reset()         { *m = FetchRequest{} }
func (m *FetchRequest) String() string { return proto.CompactTextString(m) }
func (*FetchRequest) ProtoMessage()    {}
func (*FetchRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa5f51b1c2dd69b4, []int{0}
}

func (m *FetchRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchRequest.Unmarshal(m, b)
}
func (m *FetchRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchRequest.Marshal(b, m, deterministic)
}
func (m *FetchRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchRequest.Merge(m, src)
}
func (m *FetchRequest) XXX_Size() int {
	return xxx_messageInfo_FetchRequest.Size(m)
}
func (m *FetchRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FetchRequest proto.InternalMessageInfo

type FetchResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FetchResponse) Reset()         { *m = FetchResponse{} }
func (m *FetchResponse) String() string { return proto.CompactTextString(m) }
func (*FetchResponse) ProtoMessage()    {}
func (*FetchResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_fa5f51b1c2dd69b4, []int{1}
}

func (m *FetchResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FetchResponse.Unmarshal(m, b)
}
func (m *FetchResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FetchResponse.Marshal(b, m, deterministic)
}
func (m *FetchResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FetchResponse.Merge(m, src)
}
func (m *FetchResponse) XXX_Size() int {
	return xxx_messageInfo_FetchResponse.Size(m)
}
func (m *FetchResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FetchResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FetchResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*FetchRequest)(nil), "clutch.assets.v1.FetchRequest")
	proto.RegisterType((*FetchResponse)(nil), "clutch.assets.v1.FetchResponse")
}

func init() {
	proto.RegisterFile("assets/v1/assets.proto", fileDescriptor_fa5f51b1c2dd69b4)
}

var fileDescriptor_fa5f51b1c2dd69b4 = []byte{
	// 184 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4b, 0x2c, 0x2e, 0x4e,
	0x2d, 0x29, 0xd6, 0x2f, 0x33, 0xd4, 0x87, 0xb0, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0x04,
	0x92, 0x73, 0x4a, 0x4b, 0x92, 0x33, 0xf4, 0xa0, 0x82, 0x65, 0x86, 0x52, 0x32, 0xe9, 0xf9, 0xf9,
	0xe9, 0x39, 0xa9, 0xfa, 0x89, 0x05, 0x99, 0xfa, 0x89, 0x79, 0x79, 0xf9, 0x25, 0x89, 0x25, 0x99,
	0xf9, 0x79, 0x50, 0xf5, 0x52, 0x12, 0x20, 0x61, 0x90, 0x21, 0xe8, 0x32, 0x4a, 0x7c, 0x5c, 0x3c,
	0x6e, 0xa9, 0x25, 0xc9, 0x19, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x4a, 0xfc, 0x5c, 0xbc,
	0x50, 0x7e, 0x71, 0x41, 0x7e, 0x5e, 0x71, 0xaa, 0x51, 0x29, 0x17, 0xa7, 0x23, 0xd8, 0x16, 0xc7,
	0x00, 0x4f, 0xa1, 0x0c, 0x2e, 0x56, 0xb0, 0xac, 0x90, 0x9c, 0x1e, 0xba, 0x0b, 0xf4, 0x90, 0x8d,
	0x91, 0x92, 0xc7, 0x29, 0x0f, 0x31, 0x56, 0x49, 0x6e, 0xd5, 0x43, 0x19, 0x26, 0x0e, 0xa6, 0xa6,
	0xcb, 0x4f, 0x26, 0x33, 0x09, 0x09, 0x09, 0x20, 0x7c, 0xa8, 0x9f, 0x06, 0x52, 0xe7, 0xc4, 0x15,
	0xc5, 0x01, 0xe1, 0x97, 0x19, 0x26, 0xb1, 0x81, 0x9d, 0x6a, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff,
	0x37, 0x5b, 0x04, 0x9e, 0x0e, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// AssetsAPIClient is the client API for AssetsAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AssetsAPIClient interface {
	// Fetch is a simple endpoint that is used to execute middleware (e.g. authentication) before serving an asset.
	Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*FetchResponse, error)
}

type assetsAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewAssetsAPIClient(cc grpc.ClientConnInterface) AssetsAPIClient {
	return &assetsAPIClient{cc}
}

func (c *assetsAPIClient) Fetch(ctx context.Context, in *FetchRequest, opts ...grpc.CallOption) (*FetchResponse, error) {
	out := new(FetchResponse)
	err := c.cc.Invoke(ctx, "/clutch.assets.v1.AssetsAPI/Fetch", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AssetsAPIServer is the server API for AssetsAPI service.
type AssetsAPIServer interface {
	// Fetch is a simple endpoint that is used to execute middleware (e.g. authentication) before serving an asset.
	Fetch(context.Context, *FetchRequest) (*FetchResponse, error)
}

// UnimplementedAssetsAPIServer can be embedded to have forward compatible implementations.
type UnimplementedAssetsAPIServer struct {
}

func (*UnimplementedAssetsAPIServer) Fetch(ctx context.Context, req *FetchRequest) (*FetchResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Fetch not implemented")
}

func RegisterAssetsAPIServer(s *grpc.Server, srv AssetsAPIServer) {
	s.RegisterService(&_AssetsAPI_serviceDesc, srv)
}

func _AssetsAPI_Fetch_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FetchRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AssetsAPIServer).Fetch(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clutch.assets.v1.AssetsAPI/Fetch",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AssetsAPIServer).Fetch(ctx, req.(*FetchRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AssetsAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clutch.assets.v1.AssetsAPI",
	HandlerType: (*AssetsAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Fetch",
			Handler:    _AssetsAPI_Fetch_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "assets/v1/assets.proto",
}
