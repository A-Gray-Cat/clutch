// Code generated by protoc-gen-go. DO NOT EDIT.
// source: featureflag/v1/featureflag.proto

package featureflagv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/lyft/clutch/backend/api/api/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetFlagsRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetFlagsRequest) Reset()         { *m = GetFlagsRequest{} }
func (m *GetFlagsRequest) String() string { return proto.CompactTextString(m) }
func (*GetFlagsRequest) ProtoMessage()    {}
func (*GetFlagsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44dead72847d2575, []int{0}
}

func (m *GetFlagsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlagsRequest.Unmarshal(m, b)
}
func (m *GetFlagsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlagsRequest.Marshal(b, m, deterministic)
}
func (m *GetFlagsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlagsRequest.Merge(m, src)
}
func (m *GetFlagsRequest) XXX_Size() int {
	return xxx_messageInfo_GetFlagsRequest.Size(m)
}
func (m *GetFlagsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlagsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlagsRequest proto.InternalMessageInfo

type Flag struct {
	// Types that are valid to be assigned to Type:
	//	*Flag_BooleanValue
	Type                 isFlag_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Flag) Reset()         { *m = Flag{} }
func (m *Flag) String() string { return proto.CompactTextString(m) }
func (*Flag) ProtoMessage()    {}
func (*Flag) Descriptor() ([]byte, []int) {
	return fileDescriptor_44dead72847d2575, []int{1}
}

func (m *Flag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Flag.Unmarshal(m, b)
}
func (m *Flag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Flag.Marshal(b, m, deterministic)
}
func (m *Flag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Flag.Merge(m, src)
}
func (m *Flag) XXX_Size() int {
	return xxx_messageInfo_Flag.Size(m)
}
func (m *Flag) XXX_DiscardUnknown() {
	xxx_messageInfo_Flag.DiscardUnknown(m)
}

var xxx_messageInfo_Flag proto.InternalMessageInfo

type isFlag_Type interface {
	isFlag_Type()
}

type Flag_BooleanValue struct {
	BooleanValue bool `protobuf:"varint,1,opt,name=boolean_value,json=booleanValue,proto3,oneof"`
}

func (*Flag_BooleanValue) isFlag_Type() {}

func (m *Flag) GetType() isFlag_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Flag) GetBooleanValue() bool {
	if x, ok := m.GetType().(*Flag_BooleanValue); ok {
		return x.BooleanValue
	}
	return false
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Flag) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Flag_BooleanValue)(nil),
	}
}

type GetFlagsResponse struct {
	// Map of ID to flag.
	Flags                map[string]*Flag `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *GetFlagsResponse) Reset()         { *m = GetFlagsResponse{} }
func (m *GetFlagsResponse) String() string { return proto.CompactTextString(m) }
func (*GetFlagsResponse) ProtoMessage()    {}
func (*GetFlagsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_44dead72847d2575, []int{2}
}

func (m *GetFlagsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetFlagsResponse.Unmarshal(m, b)
}
func (m *GetFlagsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetFlagsResponse.Marshal(b, m, deterministic)
}
func (m *GetFlagsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetFlagsResponse.Merge(m, src)
}
func (m *GetFlagsResponse) XXX_Size() int {
	return xxx_messageInfo_GetFlagsResponse.Size(m)
}
func (m *GetFlagsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetFlagsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetFlagsResponse proto.InternalMessageInfo

func (m *GetFlagsResponse) GetFlags() map[string]*Flag {
	if m != nil {
		return m.Flags
	}
	return nil
}

func init() {
	proto.RegisterType((*GetFlagsRequest)(nil), "clutch.featureflag.v1.GetFlagsRequest")
	proto.RegisterType((*Flag)(nil), "clutch.featureflag.v1.Flag")
	proto.RegisterType((*GetFlagsResponse)(nil), "clutch.featureflag.v1.GetFlagsResponse")
	proto.RegisterMapType((map[string]*Flag)(nil), "clutch.featureflag.v1.GetFlagsResponse.FlagsEntry")
}

func init() {
	proto.RegisterFile("featureflag/v1/featureflag.proto", fileDescriptor_44dead72847d2575)
}

var fileDescriptor_44dead72847d2575 = []byte{
	// 321 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x48, 0x4b, 0x4d, 0x2c,
	0x29, 0x2d, 0x4a, 0x4d, 0xcb, 0x49, 0x4c, 0xd7, 0x2f, 0x33, 0xd4, 0x47, 0xe2, 0xea, 0x15, 0x14,
	0xe5, 0x97, 0xe4, 0x0b, 0x89, 0x26, 0xe7, 0x94, 0x96, 0x24, 0x67, 0xe8, 0x21, 0xcb, 0x94, 0x19,
	0x4a, 0xc9, 0xa4, 0xe7, 0xe7, 0xa7, 0xe7, 0xa4, 0xea, 0x27, 0x16, 0x64, 0xea, 0x27, 0xe6, 0xe5,
	0xe5, 0x97, 0x24, 0x96, 0x64, 0xe6, 0xe7, 0x15, 0x43, 0x34, 0x49, 0x49, 0x80, 0x84, 0xcb, 0x0c,
	0x31, 0x65, 0x94, 0x04, 0xb9, 0xf8, 0xdd, 0x53, 0x4b, 0xdc, 0x72, 0x12, 0xd3, 0x8b, 0x83, 0x52,
	0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x94, 0x4c, 0xb9, 0x58, 0x40, 0x7c, 0x21, 0x55, 0x2e, 0xde, 0xa4,
	0xfc, 0xfc, 0x9c, 0xd4, 0xc4, 0xbc, 0xf8, 0xb2, 0xc4, 0x9c, 0xd2, 0x54, 0x09, 0x46, 0x05, 0x46,
	0x0d, 0x0e, 0x0f, 0x86, 0x20, 0x1e, 0xa8, 0x70, 0x18, 0x48, 0xd4, 0x89, 0x8d, 0x8b, 0xa5, 0xa4,
	0xb2, 0x20, 0x55, 0x69, 0x33, 0x23, 0x97, 0x00, 0xc2, 0xa8, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54,
	0x21, 0x0f, 0x2e, 0x56, 0x90, 0x0b, 0x8b, 0x25, 0x18, 0x15, 0x98, 0x35, 0xb8, 0x8d, 0x8c, 0xf4,
	0xb0, 0xba, 0x5e, 0x0f, 0x5d, 0x9f, 0x1e, 0x98, 0xe7, 0x9a, 0x57, 0x52, 0x54, 0x19, 0x04, 0x31,
	0x40, 0x2a, 0x94, 0x8b, 0x0b, 0x21, 0x28, 0x24, 0xc0, 0xc5, 0x9c, 0x9d, 0x5a, 0x09, 0x76, 0x11,
	0x67, 0x10, 0x88, 0x29, 0x64, 0xc8, 0xc5, 0x0a, 0x71, 0x25, 0x93, 0x02, 0xa3, 0x06, 0xb7, 0x91,
	0x34, 0x0e, 0x9b, 0x40, 0x66, 0x04, 0x41, 0x54, 0x5a, 0x31, 0x59, 0x30, 0x1a, 0xcd, 0x64, 0xe4,
	0xe2, 0x73, 0x83, 0x28, 0x01, 0x49, 0x39, 0x06, 0x78, 0x0a, 0xb5, 0x31, 0x72, 0x71, 0xc0, 0x1c,
	0x24, 0xa4, 0x46, 0xd0, 0xc5, 0xe0, 0x40, 0x93, 0x52, 0x27, 0xd2, 0x67, 0x4a, 0x9a, 0xab, 0x1e,
	0xca, 0x30, 0x71, 0x30, 0x35, 0x5d, 0x7e, 0x32, 0x99, 0x49, 0x56, 0x49, 0x02, 0x2d, 0x92, 0xf5,
	0xd3, 0xa1, 0xea, 0xad, 0x18, 0xb5, 0x9c, 0xf8, 0xa3, 0x78, 0x91, 0xa4, 0xca, 0x0c, 0x93, 0xd8,
	0xc0, 0x71, 0x66, 0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0x5a, 0x7e, 0x83, 0x91, 0x26, 0x02, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// FeatureFlagAPIClient is the client API for FeatureFlagAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type FeatureFlagAPIClient interface {
	GetFlags(ctx context.Context, in *GetFlagsRequest, opts ...grpc.CallOption) (*GetFlagsResponse, error)
}

type featureFlagAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewFeatureFlagAPIClient(cc grpc.ClientConnInterface) FeatureFlagAPIClient {
	return &featureFlagAPIClient{cc}
}

func (c *featureFlagAPIClient) GetFlags(ctx context.Context, in *GetFlagsRequest, opts ...grpc.CallOption) (*GetFlagsResponse, error) {
	out := new(GetFlagsResponse)
	err := c.cc.Invoke(ctx, "/clutch.featureflag.v1.FeatureFlagAPI/GetFlags", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// FeatureFlagAPIServer is the server API for FeatureFlagAPI service.
type FeatureFlagAPIServer interface {
	GetFlags(context.Context, *GetFlagsRequest) (*GetFlagsResponse, error)
}

// UnimplementedFeatureFlagAPIServer can be embedded to have forward compatible implementations.
type UnimplementedFeatureFlagAPIServer struct {
}

func (*UnimplementedFeatureFlagAPIServer) GetFlags(ctx context.Context, req *GetFlagsRequest) (*GetFlagsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetFlags not implemented")
}

func RegisterFeatureFlagAPIServer(s *grpc.Server, srv FeatureFlagAPIServer) {
	s.RegisterService(&_FeatureFlagAPI_serviceDesc, srv)
}

func _FeatureFlagAPI_GetFlags_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetFlagsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(FeatureFlagAPIServer).GetFlags(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clutch.featureflag.v1.FeatureFlagAPI/GetFlags",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(FeatureFlagAPIServer).GetFlags(ctx, req.(*GetFlagsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _FeatureFlagAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clutch.featureflag.v1.FeatureFlagAPI",
	HandlerType: (*FeatureFlagAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFlags",
			Handler:    _FeatureFlagAPI_GetFlags_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "featureflag/v1/featureflag.proto",
}
