// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sourcecontrol/v1/sourcecontrol.proto

package sourcecontrolv1

import (
	context "context"
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	any "github.com/golang/protobuf/ptypes/any"
	_ "github.com/lyft/clutch/backend/api/api/v1"
	v1 "github.com/lyft/clutch/backend/api/sourcecontrol/github/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CreateRepositoryRequest struct {
	Owner       string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are valid to be assigned to Options:
	//	*CreateRepositoryRequest_CustomOptions
	//	*CreateRepositoryRequest_GithubOptions
	Options              isCreateRepositoryRequest_Options `protobuf_oneof:"options"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *CreateRepositoryRequest) Reset()         { *m = CreateRepositoryRequest{} }
func (m *CreateRepositoryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryRequest) ProtoMessage()    {}
func (*CreateRepositoryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_9374021f62f7c0f3, []int{0}
}

func (m *CreateRepositoryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryRequest.Unmarshal(m, b)
}
func (m *CreateRepositoryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryRequest.Marshal(b, m, deterministic)
}
func (m *CreateRepositoryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryRequest.Merge(m, src)
}
func (m *CreateRepositoryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryRequest.Size(m)
}
func (m *CreateRepositoryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryRequest proto.InternalMessageInfo

func (m *CreateRepositoryRequest) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *CreateRepositoryRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRepositoryRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type isCreateRepositoryRequest_Options interface {
	isCreateRepositoryRequest_Options()
}

type CreateRepositoryRequest_CustomOptions struct {
	CustomOptions *any.Any `protobuf:"bytes,4,opt,name=custom_options,json=customOptions,proto3,oneof"`
}

type CreateRepositoryRequest_GithubOptions struct {
	GithubOptions *v1.CreateRepositoryOptions `protobuf:"bytes,5,opt,name=github_options,json=githubOptions,proto3,oneof"`
}

func (*CreateRepositoryRequest_CustomOptions) isCreateRepositoryRequest_Options() {}

func (*CreateRepositoryRequest_GithubOptions) isCreateRepositoryRequest_Options() {}

func (m *CreateRepositoryRequest) GetOptions() isCreateRepositoryRequest_Options {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *CreateRepositoryRequest) GetCustomOptions() *any.Any {
	if x, ok := m.GetOptions().(*CreateRepositoryRequest_CustomOptions); ok {
		return x.CustomOptions
	}
	return nil
}

func (m *CreateRepositoryRequest) GetGithubOptions() *v1.CreateRepositoryOptions {
	if x, ok := m.GetOptions().(*CreateRepositoryRequest_GithubOptions); ok {
		return x.GithubOptions
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CreateRepositoryRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CreateRepositoryRequest_CustomOptions)(nil),
		(*CreateRepositoryRequest_GithubOptions)(nil),
	}
}

type CreateRepositoryResponse struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRepositoryResponse) Reset()         { *m = CreateRepositoryResponse{} }
func (m *CreateRepositoryResponse) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryResponse) ProtoMessage()    {}
func (*CreateRepositoryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_9374021f62f7c0f3, []int{1}
}

func (m *CreateRepositoryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryResponse.Unmarshal(m, b)
}
func (m *CreateRepositoryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryResponse.Marshal(b, m, deterministic)
}
func (m *CreateRepositoryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryResponse.Merge(m, src)
}
func (m *CreateRepositoryResponse) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryResponse.Size(m)
}
func (m *CreateRepositoryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryResponse proto.InternalMessageInfo

func (m *CreateRepositoryResponse) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func init() {
	proto.RegisterType((*CreateRepositoryRequest)(nil), "clutch.sourcecontrol.v1.CreateRepositoryRequest")
	proto.RegisterType((*CreateRepositoryResponse)(nil), "clutch.sourcecontrol.v1.CreateRepositoryResponse")
}

func init() {
	proto.RegisterFile("sourcecontrol/v1/sourcecontrol.proto", fileDescriptor_9374021f62f7c0f3)
}

var fileDescriptor_9374021f62f7c0f3 = []byte{
	// 412 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xc1, 0x6a, 0xdb, 0x30,
	0x18, 0x9e, 0x9c, 0x64, 0xd9, 0x14, 0x96, 0x65, 0x62, 0x10, 0x2f, 0xcb, 0xc0, 0x98, 0xc1, 0xc2,
	0x18, 0xf2, 0x9c, 0x1c, 0x06, 0x83, 0x1d, 0xe2, 0x5c, 0xb6, 0xd3, 0x8a, 0x7b, 0xeb, 0xa5, 0x55,
	0x1c, 0x35, 0x31, 0x38, 0x92, 0x2b, 0xc9, 0x2e, 0xb9, 0xf6, 0x15, 0xfa, 0x12, 0xa5, 0xf4, 0x25,
	0xfa, 0x0c, 0x7d, 0x82, 0x42, 0x1f, 0xa2, 0xf4, 0x54, 0x6c, 0x39, 0xa5, 0x76, 0x92, 0x43, 0x6f,
	0xf2, 0xf7, 0x7f, 0xdf, 0xe7, 0xef, 0xff, 0x24, 0xf8, 0x55, 0xf2, 0x44, 0x04, 0x34, 0xe0, 0x4c,
	0x09, 0x1e, 0x39, 0xa9, 0xeb, 0x94, 0x00, 0x1c, 0x0b, 0xae, 0x38, 0xea, 0x06, 0x51, 0xa2, 0x82,
	0x05, 0x2e, 0xcf, 0x52, 0xb7, 0xd7, 0x9f, 0x73, 0x3e, 0x8f, 0xa8, 0x43, 0xe2, 0xd0, 0x21, 0x8c,
	0x71, 0x45, 0x54, 0xc8, 0x99, 0xd4, 0xb2, 0xde, 0xa7, 0x62, 0x9a, 0x7f, 0x4d, 0x93, 0x63, 0x87,
	0xb0, 0x55, 0x31, 0xea, 0xa6, 0x24, 0x0a, 0x67, 0x44, 0x51, 0x67, 0x7d, 0x28, 0x06, 0x66, 0x66,
	0x95, 0xba, 0x5b, 0xdc, 0x2a, 0x51, 0xe7, 0xa1, 0x5a, 0x24, 0xd3, 0x8c, 0xaa, 0x4f, 0x9a, 0x65,
	0x5f, 0x18, 0xb0, 0x3b, 0x11, 0x94, 0x28, 0xea, 0xd3, 0x98, 0xcb, 0x50, 0x71, 0xb1, 0xf2, 0xe9,
	0x49, 0x42, 0xa5, 0x42, 0x5f, 0x60, 0x83, 0x9f, 0x32, 0x2a, 0x4c, 0x60, 0x81, 0xc1, 0x5b, 0xaf,
	0xf9, 0xe0, 0xd5, 0x85, 0x61, 0x01, 0x5f, 0xa3, 0xe8, 0x33, 0xac, 0x33, 0xb2, 0xa4, 0xa6, 0x51,
	0x9e, 0xe6, 0x20, 0xb2, 0x60, 0x6b, 0x46, 0x65, 0x20, 0xc2, 0x38, 0xcb, 0x64, 0xd6, 0x32, 0x8e,
	0xff, 0x1c, 0x42, 0x7f, 0x60, 0x3b, 0x48, 0xa4, 0xe2, 0xcb, 0x43, 0x9e, 0x03, 0xd2, 0xac, 0x5b,
	0x60, 0xd0, 0x1a, 0x7e, 0xc4, 0xba, 0x06, 0xbc, 0xae, 0x01, 0x8f, 0xd9, 0xea, 0xef, 0x2b, 0xff,
	0x9d, 0x66, 0xff, 0xd7, 0x64, 0x74, 0x04, 0xdb, 0x7a, 0x91, 0x27, 0x79, 0x23, 0x97, 0xff, 0xc2,
	0x5b, 0xcb, 0x2f, 0x96, 0x4e, 0x5d, 0x5c, 0xdd, 0xb6, 0x30, 0xcc, 0xfe, 0xa0, 0x49, 0x05, 0xe0,
	0xb5, 0x61, 0xb3, 0xb0, 0x46, 0xb5, 0x7b, 0x0f, 0xd8, 0x3f, 0xa0, 0xb9, 0xd9, 0x94, 0x8c, 0x39,
	0x93, 0x14, 0x75, 0x60, 0x2d, 0x11, 0x91, 0x2e, 0xca, 0xcf, 0x8e, 0xc3, 0x6b, 0x00, 0x3b, 0xfb,
	0x79, 0x84, 0x89, 0x8e, 0x30, 0xde, 0xfb, 0x87, 0xae, 0x00, 0xec, 0x54, 0x3d, 0xd0, 0x4f, 0xbc,
	0xe3, 0xb9, 0xe0, 0x1d, 0x17, 0xd3, 0x73, 0x5f, 0xa0, 0xd0, 0x01, 0xed, 0xd1, 0xe5, 0x6d, 0xdf,
	0x78, 0x03, 0xce, 0x6e, 0xee, 0xce, 0x8d, 0x6f, 0xb6, 0xbd, 0xf1, 0x72, 0x9d, 0xa0, 0xa2, 0xfc,
	0x0d, 0xbe, 0x7b, 0x1f, 0x0e, 0xde, 0x97, 0x48, 0xa9, 0x3b, 0x7d, 0x9d, 0xdf, 0xca, 0xe8, 0x31,
	0x00, 0x00, 0xff, 0xff, 0x39, 0x3e, 0x3e, 0x5c, 0x09, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SourceControlAPIClient is the client API for SourceControlAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SourceControlAPIClient interface {
	CreateRepository(ctx context.Context, in *CreateRepositoryRequest, opts ...grpc.CallOption) (*CreateRepositoryResponse, error)
}

type sourceControlAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewSourceControlAPIClient(cc grpc.ClientConnInterface) SourceControlAPIClient {
	return &sourceControlAPIClient{cc}
}

func (c *sourceControlAPIClient) CreateRepository(ctx context.Context, in *CreateRepositoryRequest, opts ...grpc.CallOption) (*CreateRepositoryResponse, error) {
	out := new(CreateRepositoryResponse)
	err := c.cc.Invoke(ctx, "/clutch.sourcecontrol.v1.SourceControlAPI/CreateRepository", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SourceControlAPIServer is the server API for SourceControlAPI service.
type SourceControlAPIServer interface {
	CreateRepository(context.Context, *CreateRepositoryRequest) (*CreateRepositoryResponse, error)
}

// UnimplementedSourceControlAPIServer can be embedded to have forward compatible implementations.
type UnimplementedSourceControlAPIServer struct {
}

func (*UnimplementedSourceControlAPIServer) CreateRepository(ctx context.Context, req *CreateRepositoryRequest) (*CreateRepositoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRepository not implemented")
}

func RegisterSourceControlAPIServer(s *grpc.Server, srv SourceControlAPIServer) {
	s.RegisterService(&_SourceControlAPI_serviceDesc, srv)
}

func _SourceControlAPI_CreateRepository_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRepositoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SourceControlAPIServer).CreateRepository(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/clutch.sourcecontrol.v1.SourceControlAPI/CreateRepository",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SourceControlAPIServer).CreateRepository(ctx, req.(*CreateRepositoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SourceControlAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "clutch.sourcecontrol.v1.SourceControlAPI",
	HandlerType: (*SourceControlAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRepository",
			Handler:    _SourceControlAPI_CreateRepository_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sourcecontrol/v1/sourcecontrol.proto",
}
