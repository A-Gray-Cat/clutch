// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sourcecontrol/github/v1/github.proto

package githubv1

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RepositoryParameters_Visibility int32

const (
	RepositoryParameters_UNSPECIFIED RepositoryParameters_Visibility = 0
	RepositoryParameters_PUBLIC      RepositoryParameters_Visibility = 1
	RepositoryParameters_PRIVATE     RepositoryParameters_Visibility = 2
)

var RepositoryParameters_Visibility_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "PUBLIC",
	2: "PRIVATE",
}

var RepositoryParameters_Visibility_value = map[string]int32{
	"UNSPECIFIED": 0,
	"PUBLIC":      1,
	"PRIVATE":     2,
}

func (x RepositoryParameters_Visibility) String() string {
	return proto.EnumName(RepositoryParameters_Visibility_name, int32(x))
}

func (RepositoryParameters_Visibility) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_cebcb85280ad90ac, []int{0, 0}
}

// Common parameters for GitHub repostories.
type RepositoryParameters struct {
	Visibility           RepositoryParameters_Visibility `protobuf:"varint,1,opt,name=visibility,proto3,enum=clutch.sourcecontrol.github.v1.RepositoryParameters_Visibility" json:"visibility,omitempty"`
	AllowMergeCommit     *wrappers.BoolValue             `protobuf:"bytes,2,opt,name=allow_merge_commit,json=allowMergeCommit,proto3" json:"allow_merge_commit,omitempty"`
	AllowRebaseMerge     *wrappers.BoolValue             `protobuf:"bytes,3,opt,name=allow_rebase_merge,json=allowRebaseMerge,proto3" json:"allow_rebase_merge,omitempty"`
	AllowSquashMerge     *wrappers.BoolValue             `protobuf:"bytes,4,opt,name=allow_squash_merge,json=allowSquashMerge,proto3" json:"allow_squash_merge,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *RepositoryParameters) Reset()         { *m = RepositoryParameters{} }
func (m *RepositoryParameters) String() string { return proto.CompactTextString(m) }
func (*RepositoryParameters) ProtoMessage()    {}
func (*RepositoryParameters) Descriptor() ([]byte, []int) {
	return fileDescriptor_cebcb85280ad90ac, []int{0}
}

func (m *RepositoryParameters) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RepositoryParameters.Unmarshal(m, b)
}
func (m *RepositoryParameters) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RepositoryParameters.Marshal(b, m, deterministic)
}
func (m *RepositoryParameters) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RepositoryParameters.Merge(m, src)
}
func (m *RepositoryParameters) XXX_Size() int {
	return xxx_messageInfo_RepositoryParameters.Size(m)
}
func (m *RepositoryParameters) XXX_DiscardUnknown() {
	xxx_messageInfo_RepositoryParameters.DiscardUnknown(m)
}

var xxx_messageInfo_RepositoryParameters proto.InternalMessageInfo

func (m *RepositoryParameters) GetVisibility() RepositoryParameters_Visibility {
	if m != nil {
		return m.Visibility
	}
	return RepositoryParameters_UNSPECIFIED
}

func (m *RepositoryParameters) GetAllowMergeCommit() *wrappers.BoolValue {
	if m != nil {
		return m.AllowMergeCommit
	}
	return nil
}

func (m *RepositoryParameters) GetAllowRebaseMerge() *wrappers.BoolValue {
	if m != nil {
		return m.AllowRebaseMerge
	}
	return nil
}

func (m *RepositoryParameters) GetAllowSquashMerge() *wrappers.BoolValue {
	if m != nil {
		return m.AllowSquashMerge
	}
	return nil
}

// Options unique to creating a repository.
type CreateRepositoryOptions struct {
	Parameters *RepositoryParameters `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	// Pass true to create an initial commit with empty README.
	AutoInit             bool     `protobuf:"varint,2,opt,name=auto_init,json=autoInit,proto3" json:"auto_init,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRepositoryOptions) Reset()         { *m = CreateRepositoryOptions{} }
func (m *CreateRepositoryOptions) String() string { return proto.CompactTextString(m) }
func (*CreateRepositoryOptions) ProtoMessage()    {}
func (*CreateRepositoryOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_cebcb85280ad90ac, []int{1}
}

func (m *CreateRepositoryOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRepositoryOptions.Unmarshal(m, b)
}
func (m *CreateRepositoryOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRepositoryOptions.Marshal(b, m, deterministic)
}
func (m *CreateRepositoryOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRepositoryOptions.Merge(m, src)
}
func (m *CreateRepositoryOptions) XXX_Size() int {
	return xxx_messageInfo_CreateRepositoryOptions.Size(m)
}
func (m *CreateRepositoryOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRepositoryOptions.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRepositoryOptions proto.InternalMessageInfo

func (m *CreateRepositoryOptions) GetParameters() *RepositoryParameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *CreateRepositoryOptions) GetAutoInit() bool {
	if m != nil {
		return m.AutoInit
	}
	return false
}

// Options unique to updating a repository.
type UpdateRepositoryOptions struct {
	Parameters *RepositoryParameters `protobuf:"bytes,1,opt,name=parameters,proto3" json:"parameters,omitempty"`
	// Pass true to archive this repository. Note: You cannot unarchive repositories through the API.
	Archived             bool     `protobuf:"varint,2,opt,name=archived,proto3" json:"archived,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRepositoryOptions) Reset()         { *m = UpdateRepositoryOptions{} }
func (m *UpdateRepositoryOptions) String() string { return proto.CompactTextString(m) }
func (*UpdateRepositoryOptions) ProtoMessage()    {}
func (*UpdateRepositoryOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_cebcb85280ad90ac, []int{2}
}

func (m *UpdateRepositoryOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRepositoryOptions.Unmarshal(m, b)
}
func (m *UpdateRepositoryOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRepositoryOptions.Marshal(b, m, deterministic)
}
func (m *UpdateRepositoryOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRepositoryOptions.Merge(m, src)
}
func (m *UpdateRepositoryOptions) XXX_Size() int {
	return xxx_messageInfo_UpdateRepositoryOptions.Size(m)
}
func (m *UpdateRepositoryOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRepositoryOptions.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRepositoryOptions proto.InternalMessageInfo

func (m *UpdateRepositoryOptions) GetParameters() *RepositoryParameters {
	if m != nil {
		return m.Parameters
	}
	return nil
}

func (m *UpdateRepositoryOptions) GetArchived() bool {
	if m != nil {
		return m.Archived
	}
	return false
}

func init() {
	proto.RegisterEnum("clutch.sourcecontrol.github.v1.RepositoryParameters_Visibility", RepositoryParameters_Visibility_name, RepositoryParameters_Visibility_value)
	proto.RegisterType((*RepositoryParameters)(nil), "clutch.sourcecontrol.github.v1.RepositoryParameters")
	proto.RegisterType((*CreateRepositoryOptions)(nil), "clutch.sourcecontrol.github.v1.CreateRepositoryOptions")
	proto.RegisterType((*UpdateRepositoryOptions)(nil), "clutch.sourcecontrol.github.v1.UpdateRepositoryOptions")
}

func init() {
	proto.RegisterFile("sourcecontrol/github/v1/github.proto", fileDescriptor_cebcb85280ad90ac)
}

var fileDescriptor_cebcb85280ad90ac = []byte{
	// 410 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x91, 0xcf, 0x6b, 0xd4, 0x40,
	0x14, 0xc7, 0x3b, 0x6d, 0x69, 0xd7, 0xb7, 0xa0, 0x61, 0x10, 0x76, 0x89, 0x50, 0x96, 0xe0, 0xa1,
	0xa7, 0x09, 0xbb, 0x8a, 0x57, 0x31, 0x71, 0xc5, 0x80, 0x3f, 0x42, 0xda, 0xdd, 0x83, 0x97, 0x65,
	0x92, 0x1d, 0x93, 0xc1, 0x49, 0x26, 0xce, 0x4c, 0x52, 0x7a, 0xf5, 0xaa, 0xff, 0x80, 0xff, 0xaa,
	0x27, 0xe9, 0x24, 0xdd, 0x54, 0x10, 0x59, 0x3c, 0xf4, 0xf6, 0x92, 0x79, 0x9f, 0x0f, 0xef, 0x7d,
	0x1f, 0x3c, 0xd5, 0xb2, 0x51, 0x19, 0xcb, 0x64, 0x65, 0x94, 0x14, 0x7e, 0xce, 0x4d, 0xd1, 0xa4,
	0x7e, 0x3b, 0xef, 0x2b, 0x52, 0x2b, 0x69, 0x24, 0x3e, 0xcb, 0x44, 0x63, 0xb2, 0x82, 0xfc, 0xd1,
	0x4c, 0xfa, 0x96, 0x76, 0xee, 0x9e, 0xe5, 0x52, 0xe6, 0x82, 0xf9, 0xb6, 0x3b, 0x6d, 0x3e, 0xfb,
	0x57, 0x8a, 0xd6, 0x35, 0x53, 0xba, 0xe3, 0xdd, 0x49, 0x4b, 0x05, 0xdf, 0x52, 0xc3, 0xfc, 0xdb,
	0xa2, 0x7b, 0xf0, 0x7e, 0x1e, 0xc1, 0xe3, 0x84, 0xd5, 0x52, 0x73, 0x23, 0xd5, 0x75, 0x4c, 0x15,
	0x2d, 0x99, 0x61, 0x4a, 0xe3, 0x2f, 0x00, 0x2d, 0xd7, 0x3c, 0xe5, 0x82, 0x9b, 0xeb, 0x29, 0x9a,
	0xa1, 0xf3, 0x87, 0x8b, 0x97, 0xe4, 0xdf, 0x63, 0x90, 0xbf, 0x99, 0xc8, 0x7a, 0xa7, 0x09, 0xe0,
	0x57, 0x70, 0xfa, 0x0d, 0x1d, 0x3b, 0x68, 0x76, 0x90, 0xdc, 0xd1, 0xe3, 0xb7, 0x80, 0xa9, 0x10,
	0xf2, 0x6a, 0x53, 0x32, 0x95, 0xb3, 0x4d, 0x26, 0xcb, 0x92, 0x9b, 0xe9, 0xe1, 0x0c, 0x9d, 0x8f,
	0x17, 0x2e, 0xe9, 0x76, 0x23, 0xb7, 0xbb, 0x91, 0x40, 0x4a, 0xb1, 0xa6, 0xa2, 0x61, 0x89, 0x63,
	0xa9, 0xf7, 0x37, 0x50, 0x68, 0x99, 0xc1, 0xa4, 0x58, 0x4a, 0x35, 0xeb, 0x84, 0xd3, 0xa3, 0x3d,
	0x4d, 0x89, 0x85, 0xac, 0x6f, 0x30, 0xe9, 0xaf, 0x0d, 0xd5, 0x45, 0x6f, 0x3a, 0xde, 0xd3, 0x74,
	0x61, 0x21, 0x6b, 0xf2, 0x5e, 0x00, 0x0c, 0x19, 0xe0, 0x47, 0x30, 0x5e, 0x7d, 0xb8, 0x88, 0x97,
	0x61, 0xf4, 0x26, 0x5a, 0xbe, 0x76, 0x0e, 0x30, 0xc0, 0x49, 0xbc, 0x0a, 0xde, 0x45, 0xa1, 0x83,
	0xf0, 0x18, 0x4e, 0xe3, 0x24, 0x5a, 0xbf, 0xba, 0x5c, 0x3a, 0x87, 0xde, 0x0f, 0x04, 0x93, 0x50,
	0x31, 0x6a, 0xd8, 0x90, 0xeb, 0xc7, 0xda, 0x70, 0x59, 0x69, 0x7c, 0x09, 0x50, 0xef, 0x22, 0xb6,
	0xe7, 0x19, 0x2f, 0x9e, 0xff, 0xcf, 0x79, 0x92, 0x3b, 0x1e, 0xfc, 0x04, 0x1e, 0xd0, 0xc6, 0xc8,
	0x0d, 0xaf, 0xfa, 0xf8, 0x47, 0xc9, 0xe8, 0xe6, 0x47, 0x54, 0x71, 0xe3, 0x7d, 0x47, 0x30, 0x59,
	0xd5, 0xdb, 0x7b, 0x1c, 0xc7, 0x85, 0x11, 0x55, 0x59, 0xc1, 0x5b, 0xb6, 0xdd, 0x4d, 0xd3, 0x7f,
	0x07, 0xf0, 0x69, 0xd4, 0x99, 0xda, 0x79, 0x7a, 0x62, 0xcf, 0xf0, 0xec, 0x77, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x24, 0x8f, 0xec, 0xa9, 0x4c, 0x03, 0x00, 0x00,
}
