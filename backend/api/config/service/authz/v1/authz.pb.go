// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config/service/authz/v1/authz.proto

package authzv1

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	v1 "github.com/lyft/clutch/backend/api/api/v1"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Principal struct {
	// Types that are valid to be assigned to Type:
	//	*Principal_User
	//	*Principal_Group
	Type                 isPrincipal_Type `protobuf_oneof:"type"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Principal) Reset()         { *m = Principal{} }
func (m *Principal) String() string { return proto.CompactTextString(m) }
func (*Principal) ProtoMessage()    {}
func (*Principal) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9777028d30315e5, []int{0}
}

func (m *Principal) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Principal.Unmarshal(m, b)
}
func (m *Principal) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Principal.Marshal(b, m, deterministic)
}
func (m *Principal) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Principal.Merge(m, src)
}
func (m *Principal) XXX_Size() int {
	return xxx_messageInfo_Principal.Size(m)
}
func (m *Principal) XXX_DiscardUnknown() {
	xxx_messageInfo_Principal.DiscardUnknown(m)
}

var xxx_messageInfo_Principal proto.InternalMessageInfo

type isPrincipal_Type interface {
	isPrincipal_Type()
}

type Principal_User struct {
	User string `protobuf:"bytes,1,opt,name=user,proto3,oneof"`
}

type Principal_Group struct {
	Group string `protobuf:"bytes,2,opt,name=group,proto3,oneof"`
}

func (*Principal_User) isPrincipal_Type() {}

func (*Principal_Group) isPrincipal_Type() {}

func (m *Principal) GetType() isPrincipal_Type {
	if m != nil {
		return m.Type
	}
	return nil
}

func (m *Principal) GetUser() string {
	if x, ok := m.GetType().(*Principal_User); ok {
		return x.User
	}
	return ""
}

func (m *Principal) GetGroup() string {
	if x, ok := m.GetType().(*Principal_Group); ok {
		return x.Group
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Principal) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Principal_User)(nil),
		(*Principal_Group)(nil),
	}
}

type RoleBinding struct {
	To                   []string     `protobuf:"bytes,1,rep,name=to,proto3" json:"to,omitempty"`
	Principals           []*Principal `protobuf:"bytes,2,rep,name=principals,proto3" json:"principals,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *RoleBinding) Reset()         { *m = RoleBinding{} }
func (m *RoleBinding) String() string { return proto.CompactTextString(m) }
func (*RoleBinding) ProtoMessage()    {}
func (*RoleBinding) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9777028d30315e5, []int{1}
}

func (m *RoleBinding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RoleBinding.Unmarshal(m, b)
}
func (m *RoleBinding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RoleBinding.Marshal(b, m, deterministic)
}
func (m *RoleBinding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RoleBinding.Merge(m, src)
}
func (m *RoleBinding) XXX_Size() int {
	return xxx_messageInfo_RoleBinding.Size(m)
}
func (m *RoleBinding) XXX_DiscardUnknown() {
	xxx_messageInfo_RoleBinding.DiscardUnknown(m)
}

var xxx_messageInfo_RoleBinding proto.InternalMessageInfo

func (m *RoleBinding) GetTo() []string {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *RoleBinding) GetPrincipals() []*Principal {
	if m != nil {
		return m.Principals
	}
	return nil
}

type Policy struct {
	// For logging purposes, give the policy a defined name.
	PolicyName string `protobuf:"bytes,1,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// A list of acceptable action types. If left empty, all action types are accepted.
	ActionTypes []v1.ActionType `protobuf:"varint,2,rep,packed,name=action_types,json=actionTypes,proto3,enum=clutch.api.v1.ActionType" json:"action_types,omitempty"`
	// The full method in the format of a `/SERVICE/METHOD`. Wildcards are allowed, e.g. `*` or `/SERVICE/*`.
	// If left empty, all methods are accepted.
	Method string `protobuf:"bytes,3,opt,name=method,proto3" json:"method,omitempty"`
	// Resource from the id annotation on proto objects. Wildcards are allowed.
	Resources            []string `protobuf:"bytes,4,rep,name=resources,proto3" json:"resources,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Policy) Reset()         { *m = Policy{} }
func (m *Policy) String() string { return proto.CompactTextString(m) }
func (*Policy) ProtoMessage()    {}
func (*Policy) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9777028d30315e5, []int{2}
}

func (m *Policy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Policy.Unmarshal(m, b)
}
func (m *Policy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Policy.Marshal(b, m, deterministic)
}
func (m *Policy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Policy.Merge(m, src)
}
func (m *Policy) XXX_Size() int {
	return xxx_messageInfo_Policy.Size(m)
}
func (m *Policy) XXX_DiscardUnknown() {
	xxx_messageInfo_Policy.DiscardUnknown(m)
}

var xxx_messageInfo_Policy proto.InternalMessageInfo

func (m *Policy) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func (m *Policy) GetActionTypes() []v1.ActionType {
	if m != nil {
		return m.ActionTypes
	}
	return nil
}

func (m *Policy) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Policy) GetResources() []string {
	if m != nil {
		return m.Resources
	}
	return nil
}

type Role struct {
	RoleName             string    `protobuf:"bytes,1,opt,name=role_name,json=roleName,proto3" json:"role_name,omitempty"`
	Policies             []*Policy `protobuf:"bytes,2,rep,name=policies,proto3" json:"policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Role) Reset()         { *m = Role{} }
func (m *Role) String() string { return proto.CompactTextString(m) }
func (*Role) ProtoMessage()    {}
func (*Role) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9777028d30315e5, []int{3}
}

func (m *Role) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Role.Unmarshal(m, b)
}
func (m *Role) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Role.Marshal(b, m, deterministic)
}
func (m *Role) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Role.Merge(m, src)
}
func (m *Role) XXX_Size() int {
	return xxx_messageInfo_Role.Size(m)
}
func (m *Role) XXX_DiscardUnknown() {
	xxx_messageInfo_Role.DiscardUnknown(m)
}

var xxx_messageInfo_Role proto.InternalMessageInfo

func (m *Role) GetRoleName() string {
	if m != nil {
		return m.RoleName
	}
	return ""
}

func (m *Role) GetPolicies() []*Policy {
	if m != nil {
		return m.Policies
	}
	return nil
}

type Config struct {
	RoleBindings         []*RoleBinding `protobuf:"bytes,1,rep,name=role_bindings,json=roleBindings,proto3" json:"role_bindings,omitempty"`
	Roles                []*Role        `protobuf:"bytes,2,rep,name=roles,proto3" json:"roles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_a9777028d30315e5, []int{4}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetRoleBindings() []*RoleBinding {
	if m != nil {
		return m.RoleBindings
	}
	return nil
}

func (m *Config) GetRoles() []*Role {
	if m != nil {
		return m.Roles
	}
	return nil
}

func init() {
	proto.RegisterType((*Principal)(nil), "clutch.config.service.authz.v1.Principal")
	proto.RegisterType((*RoleBinding)(nil), "clutch.config.service.authz.v1.RoleBinding")
	proto.RegisterType((*Policy)(nil), "clutch.config.service.authz.v1.Policy")
	proto.RegisterType((*Role)(nil), "clutch.config.service.authz.v1.Role")
	proto.RegisterType((*Config)(nil), "clutch.config.service.authz.v1.Config")
}

func init() {
	proto.RegisterFile("config/service/authz/v1/authz.proto", fileDescriptor_a9777028d30315e5)
}

var fileDescriptor_a9777028d30315e5 = []byte{
	// 444 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xdf, 0x8b, 0x13, 0x31,
	0x10, 0xc7, 0xcd, 0xf6, 0xc7, 0xed, 0xce, 0xd6, 0x53, 0xa2, 0xe8, 0x7a, 0xc8, 0x59, 0xd6, 0x43,
	0x2a, 0xc2, 0x96, 0xd6, 0x37, 0xf1, 0xc5, 0x08, 0xe2, 0x93, 0x94, 0xe0, 0xd3, 0xbd, 0x1c, 0xb9,
	0x34, 0xb6, 0x81, 0xed, 0x26, 0x24, 0xd9, 0x85, 0xfa, 0x1f, 0xe8, 0xe3, 0x3d, 0xf8, 0x6f, 0xf8,
	0xef, 0x49, 0x9f, 0x64, 0x93, 0x6e, 0xef, 0x04, 0xf1, 0x7c, 0x9b, 0x99, 0x7c, 0x67, 0xe6, 0x33,
	0x33, 0x81, 0xe7, 0x5c, 0x55, 0x5f, 0xe4, 0x6a, 0x6a, 0x85, 0x69, 0x24, 0x17, 0x53, 0x56, 0xbb,
	0xf5, 0xd7, 0x69, 0x33, 0x0b, 0x46, 0xa1, 0x8d, 0x72, 0x0a, 0x9f, 0xf2, 0xb2, 0x76, 0x7c, 0x5d,
	0x04, 0x6d, 0xb1, 0xd7, 0x16, 0x41, 0xd2, 0xcc, 0x4e, 0x1e, 0x30, 0x2d, 0xdb, 0x1c, 0xcb, 0xd7,
	0x62, 0xc3, 0x42, 0xd2, 0xc9, 0xe3, 0x86, 0x95, 0x72, 0xc9, 0x9c, 0x98, 0x76, 0x46, 0x78, 0xc8,
	0x3f, 0x40, 0xb2, 0x30, 0xb2, 0xe2, 0x52, 0xb3, 0x12, 0x3f, 0x84, 0x7e, 0x6d, 0x85, 0xc9, 0xd0,
	0x18, 0x4d, 0x92, 0x8f, 0x77, 0xa8, 0xf7, 0xf0, 0x23, 0x18, 0xac, 0x8c, 0xaa, 0x75, 0x16, 0xed,
	0xc3, 0xc1, 0x25, 0x29, 0xf4, 0xdd, 0x56, 0x0b, 0xdc, 0xfb, 0x45, 0x50, 0xfe, 0x0d, 0x41, 0x4a,
	0x55, 0x29, 0x88, 0xac, 0x96, 0xb2, 0x5a, 0xe1, 0x53, 0x88, 0x9c, 0xca, 0xd0, 0xb8, 0x37, 0x49,
	0xc8, 0xf1, 0x8e, 0xa4, 0x57, 0x28, 0x8e, 0x51, 0xde, 0x37, 0xd1, 0x18, 0xd1, 0xc8, 0x29, 0x7c,
	0x0e, 0xa0, 0xbb, 0xbe, 0x36, 0x8b, 0xc6, 0xbd, 0x49, 0x3a, 0x7f, 0x59, 0xfc, 0x7b, 0xb4, 0xe2,
	0x40, 0x4a, 0xee, 0xed, 0xc8, 0xe8, 0x0a, 0x25, 0x31, 0xca, 0x07, 0xdf, 0x51, 0x74, 0x1f, 0xd1,
	0x1b, 0xd5, 0xf2, 0x9f, 0x08, 0x86, 0x0b, 0x55, 0x4a, 0xbe, 0xc5, 0x13, 0x48, 0xb5, 0xb7, 0x2e,
	0x2a, 0xb6, 0x11, 0x61, 0x30, 0x72, 0xb4, 0x23, 0x01, 0x04, 0xc2, 0xdb, 0x27, 0xb6, 0x11, 0xf8,
	0x2d, 0x8c, 0x18, 0x77, 0x52, 0x55, 0x17, 0xed, 0x50, 0x01, 0xe9, 0x78, 0xfe, 0xa4, 0x43, 0x62,
	0x5a, 0xb6, 0x04, 0xef, 0xbc, 0xe4, 0xf3, 0x56, 0x0b, 0x9a, 0xb2, 0x83, 0x6d, 0xf1, 0x33, 0x18,
	0x6e, 0x84, 0x5b, 0xab, 0x65, 0xd6, 0xfb, 0xb3, 0xc5, 0x3e, 0x8c, 0x9f, 0x42, 0x62, 0x84, 0x55,
	0xb5, 0xe1, 0xc2, 0x66, 0xfd, 0x76, 0x2d, 0xf4, 0x3a, 0x90, 0x6b, 0xe8, 0xb7, 0xcb, 0xc3, 0x67,
	0x90, 0x18, 0x55, 0x8a, 0xbf, 0xc2, 0xc6, 0xed, 0x8b, 0x47, 0x25, 0x10, 0x7b, 0x70, 0x29, 0xba,
	0xcd, 0xbd, 0xb8, 0x75, 0x73, 0x7e, 0x50, 0x7a, 0xc8, 0xcb, 0x7f, 0x20, 0x18, 0xbe, 0xf7, 0x62,
	0xbc, 0x80, 0xbb, 0xbe, 0xe9, 0x65, 0x38, 0x9d, 0xf5, 0x57, 0x4b, 0xe7, 0xaf, 0x6e, 0xab, 0x79,
	0xe3, 0xdc, 0x74, 0x64, 0xae, 0x1d, 0x8b, 0xdf, 0xc0, 0xa0, 0xf5, 0x3b, 0xba, 0xb3, 0xff, 0xa9,
	0x44, 0x43, 0x0a, 0x49, 0xce, 0x8f, 0x7c, 0xbc, 0x99, 0x5d, 0x0e, 0xfd, 0x17, 0x7d, 0xfd, 0x3b,
	0x00, 0x00, 0xff, 0xff, 0xbc, 0x81, 0x32, 0x2d, 0x17, 0x03, 0x00, 0x00,
}
