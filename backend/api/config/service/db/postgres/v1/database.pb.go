// Code generated by protoc-gen-go. DO NOT EDIT.
// source: config/service/db/postgres/v1/database.proto

package postgresv1

import (
	fmt "fmt"
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Connection_SSLMode int32

const (
	Connection_UNSPECIFIED Connection_SSLMode = 0
	Connection_DISABLE     Connection_SSLMode = 1
	Connection_ALLOW       Connection_SSLMode = 2
	Connection_PREFER      Connection_SSLMode = 3
	Connection_REQUIRE     Connection_SSLMode = 4
	Connection_VERIFY_CA   Connection_SSLMode = 5
	Connection_VERIFY_FULL Connection_SSLMode = 6
)

var Connection_SSLMode_name = map[int32]string{
	0: "UNSPECIFIED",
	1: "DISABLE",
	2: "ALLOW",
	3: "PREFER",
	4: "REQUIRE",
	5: "VERIFY_CA",
	6: "VERIFY_FULL",
}

var Connection_SSLMode_value = map[string]int32{
	"UNSPECIFIED": 0,
	"DISABLE":     1,
	"ALLOW":       2,
	"PREFER":      3,
	"REQUIRE":     4,
	"VERIFY_CA":   5,
	"VERIFY_FULL": 6,
}

func (x Connection_SSLMode) String() string {
	return proto.EnumName(Connection_SSLMode_name, int32(x))
}

func (Connection_SSLMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e87234526d0f655e, []int{0, 0}
}

type Connection struct {
	Host    string             `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port    uint32             `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	User    string             `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Dbname  string             `protobuf:"bytes,4,opt,name=dbname,proto3" json:"dbname,omitempty"`
	SslMode Connection_SSLMode `protobuf:"varint,5,opt,name=ssl_mode,json=sslMode,proto3,enum=clutch.config.service.db.postgres.v1.Connection_SSLMode" json:"ssl_mode,omitempty"`
	// TODO: GSSAPI, SSPI, Kerberos
	//
	// Types that are valid to be assigned to Authn:
	//	*Connection_Password
	Authn                isConnection_Authn `protobuf_oneof:"authn"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}
func (*Connection) Descriptor() ([]byte, []int) {
	return fileDescriptor_e87234526d0f655e, []int{0}
}

func (m *Connection) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Connection.Unmarshal(m, b)
}
func (m *Connection) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Connection.Marshal(b, m, deterministic)
}
func (m *Connection) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Connection.Merge(m, src)
}
func (m *Connection) XXX_Size() int {
	return xxx_messageInfo_Connection.Size(m)
}
func (m *Connection) XXX_DiscardUnknown() {
	xxx_messageInfo_Connection.DiscardUnknown(m)
}

var xxx_messageInfo_Connection proto.InternalMessageInfo

func (m *Connection) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *Connection) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *Connection) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Connection) GetDbname() string {
	if m != nil {
		return m.Dbname
	}
	return ""
}

func (m *Connection) GetSslMode() Connection_SSLMode {
	if m != nil {
		return m.SslMode
	}
	return Connection_UNSPECIFIED
}

type isConnection_Authn interface {
	isConnection_Authn()
}

type Connection_Password struct {
	Password string `protobuf:"bytes,6,opt,name=password,proto3,oneof"`
}

func (*Connection_Password) isConnection_Authn() {}

func (m *Connection) GetAuthn() isConnection_Authn {
	if m != nil {
		return m.Authn
	}
	return nil
}

func (m *Connection) GetPassword() string {
	if x, ok := m.GetAuthn().(*Connection_Password); ok {
		return x.Password
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Connection) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Connection_Password)(nil),
	}
}

// TODO: Expose more database/sql tunables.
type Config struct {
	Connection           *Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Config) Reset()         { *m = Config{} }
func (m *Config) String() string { return proto.CompactTextString(m) }
func (*Config) ProtoMessage()    {}
func (*Config) Descriptor() ([]byte, []int) {
	return fileDescriptor_e87234526d0f655e, []int{1}
}

func (m *Config) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Config.Unmarshal(m, b)
}
func (m *Config) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Config.Marshal(b, m, deterministic)
}
func (m *Config) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Config.Merge(m, src)
}
func (m *Config) XXX_Size() int {
	return xxx_messageInfo_Config.Size(m)
}
func (m *Config) XXX_DiscardUnknown() {
	xxx_messageInfo_Config.DiscardUnknown(m)
}

var xxx_messageInfo_Config proto.InternalMessageInfo

func (m *Config) GetConnection() *Connection {
	if m != nil {
		return m.Connection
	}
	return nil
}

func init() {
	proto.RegisterEnum("clutch.config.service.db.postgres.v1.Connection_SSLMode", Connection_SSLMode_name, Connection_SSLMode_value)
	proto.RegisterType((*Connection)(nil), "clutch.config.service.db.postgres.v1.Connection")
	proto.RegisterType((*Config)(nil), "clutch.config.service.db.postgres.v1.Config")
}

func init() {
	proto.RegisterFile("config/service/db/postgres/v1/database.proto", fileDescriptor_e87234526d0f655e)
}

var fileDescriptor_e87234526d0f655e = []byte{
	// 402 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x91, 0x4f, 0x8f, 0xd3, 0x30,
	0x10, 0xc5, 0x37, 0x6d, 0xfe, 0xb4, 0x53, 0x16, 0x2c, 0x1f, 0x20, 0xe2, 0x8f, 0x54, 0x55, 0x20,
	0x55, 0x08, 0x39, 0x74, 0xb9, 0x70, 0xad, 0xbb, 0xae, 0x88, 0x14, 0xa0, 0x38, 0x2a, 0x88, 0xbd,
	0xac, 0x9c, 0xd8, 0x6c, 0x2b, 0xba, 0x71, 0x65, 0xbb, 0xe1, 0x2b, 0xf1, 0xf1, 0x38, 0xf7, 0xb2,
	0xa8, 0xd9, 0xb6, 0xc0, 0x8d, 0xbd, 0xcd, 0xbc, 0x99, 0xdf, 0xe8, 0x3d, 0x1b, 0x5e, 0x95, 0xba,
	0xfa, 0xb6, 0xbc, 0x4a, 0xac, 0x32, 0xf5, 0xb2, 0x54, 0x89, 0x2c, 0x92, 0xb5, 0xb6, 0xee, 0xca,
	0x28, 0x9b, 0xd4, 0xa3, 0x44, 0x0a, 0x27, 0x0a, 0x61, 0x15, 0x59, 0x1b, 0xed, 0x34, 0x7e, 0x5e,
	0xae, 0x36, 0xae, 0x5c, 0x90, 0x5b, 0x88, 0xec, 0x21, 0x22, 0x0b, 0x72, 0x80, 0x48, 0x3d, 0x7a,
	0xfc, 0xa8, 0x16, 0xab, 0xa5, 0x14, 0x4e, 0x25, 0x87, 0xe2, 0x16, 0x1f, 0xfc, 0x6a, 0x01, 0x4c,
	0x74, 0x55, 0xa9, 0xd2, 0x2d, 0x75, 0x85, 0x9f, 0x82, 0xbf, 0xd0, 0xd6, 0xc5, 0x5e, 0xdf, 0x1b,
	0x76, 0x69, 0x67, 0x4b, 0x03, 0xd3, 0xfe, 0xe9, 0x79, 0xbc, 0x51, 0xf1, 0x33, 0xf0, 0xd7, 0xda,
	0xb8, 0xb8, 0xd5, 0xf7, 0x86, 0xa7, 0xb4, 0xbb, 0xa5, 0xe1, 0x4b, 0x3f, 0xbe, 0xb9, 0x69, 0xf3,
	0x46, 0xc6, 0x4f, 0xc0, 0xdf, 0x58, 0x65, 0xe2, 0x76, 0x03, 0x47, 0x5b, 0xea, 0x9b, 0x16, 0xf2,
	0x78, 0x23, 0xe2, 0x87, 0x10, 0xca, 0xa2, 0x12, 0xd7, 0x2a, 0xf6, 0x77, 0x63, 0xbe, 0xef, 0x70,
	0x0e, 0x1d, 0x6b, 0x57, 0x97, 0xd7, 0x5a, 0xaa, 0x38, 0xe8, 0x7b, 0xc3, 0xfb, 0x67, 0x6f, 0xc9,
	0xff, 0x44, 0x22, 0x7f, 0x5c, 0x93, 0x3c, 0xcf, 0xde, 0x6b, 0xa9, 0x78, 0x64, 0xed, 0x6a, 0x57,
	0xe0, 0x17, 0xd0, 0x59, 0x0b, 0x6b, 0x7f, 0x68, 0x23, 0xe3, 0xf0, 0x1f, 0x37, 0xef, 0x4e, 0xf8,
	0x71, 0x34, 0xf8, 0x0e, 0xd1, 0x1e, 0xc5, 0x0f, 0xa0, 0x37, 0xff, 0x90, 0xcf, 0xd8, 0x24, 0x9d,
	0xa6, 0xec, 0x1c, 0x9d, 0xe0, 0x1e, 0x44, 0xe7, 0x69, 0x3e, 0xa6, 0x19, 0x43, 0x1e, 0xee, 0x42,
	0x30, 0xce, 0xb2, 0x8f, 0x5f, 0x50, 0x0b, 0x03, 0x84, 0x33, 0xce, 0xa6, 0x8c, 0xa3, 0xf6, 0x6e,
	0x87, 0xb3, 0x4f, 0xf3, 0x94, 0x33, 0xe4, 0xe3, 0x53, 0xe8, 0x7e, 0x66, 0x3c, 0x9d, 0x7e, 0xbd,
	0x9c, 0x8c, 0x51, 0xb0, 0x3b, 0xb8, 0x6f, 0xa7, 0xf3, 0x2c, 0x43, 0x21, 0x8d, 0x20, 0x10, 0x1b,
	0xb7, 0xa8, 0x06, 0x17, 0x10, 0x4e, 0x9a, 0x64, 0x78, 0x06, 0x50, 0x1e, 0x53, 0x34, 0x6f, 0xde,
	0x3b, 0x7b, 0x7d, 0xd7, 0xf4, 0xfc, 0xaf, 0x1b, 0xf4, 0xde, 0x05, 0x1c, 0xb6, 0xea, 0x51, 0x11,
	0x36, 0x7f, 0xfc, 0xe6, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe2, 0x2a, 0x6a, 0xd4, 0x52, 0x02,
	0x00, 0x00,
}
